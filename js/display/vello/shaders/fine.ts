/* eslint-disable */
import ptcl from './shared/ptcl.js';
import blend from './shared/blend.js';
import config from './shared/config.js';
import segment from './shared/segment.js';

export default `struct _aK{_B:i32,_R:u32}${segment}
${config}
@group(0)@binding(0)var<uniform>_m:_aG;@group(0)@binding(1)var<storage>_w:array<_aK>;@group(0)@binding(2)var<storage>_R:array<_dx>;${blend}
${ptcl}
const _fP=512;@group(0)@binding(3)var _bg:texture_storage_2d<rgba8unorm,write>;@group(0)@binding(4)var<storage>_q:array<u32>;@group(0)@binding(5)var _eK:texture_2d<f32>;@group(0)@binding(6)var<storage>_o:array<u32>;@group(0)@binding(7)var _dN:texture_2d<f32>;fn _hA(_y:u32)->_fj{let _a=_q[_y+1u];let _B=i32(_q[_y+2u]);return _fj(_a,_B);}fn _hz(_y:u32)->_fi{let _a=_q[_y+1u];let _cP=bitcast<f32>(_q[_y+2u]);return _fi(_a,_cP);}fn _hy(_y:u32)->_ek{let _cO=_q[_y+1u];return _ek(_cO);}fn _hx(_y:u32)->_gG{let _dn=_q[_y+1u];let _am=_dn>>2u;let _bE=_dn&0x3u;let _N=_q[_y+2u];let _cd=bitcast<f32>(_o[_N]);let _fg=bitcast<f32>(_o[_N+1u]);let _dy=bitcast<f32>(_o[_N+2u]);return _gG(_am,_bE,_cd,_fg,_dy);}fn _hw(_y:u32)->_gF{let _dn=_q[_y+1u];let _am=_dn>>2u;let _bE=_dn&0x3u;let _N=_q[_y+2u];let m0=bitcast<f32>(_o[_N]);let m1=bitcast<f32>(_o[_N+1u]);let m2=bitcast<f32>(_o[_N+2u]);let m3=bitcast<f32>(_o[_N+3u]);let _i=vec4(m0,m1,m2,m3);let _cx=vec2(bitcast<f32>(_o[_N+4u]),bitcast<f32>(_o[_N+5u]));let _aW=bitcast<f32>(_o[_N+6u]);let _aM=bitcast<f32>(_o[_N+7u]);let _fO=_o[_N+8u];let _ae=_fO>>3u;let _aR=_fO&0x7u;return _gF(_am,_bE,_i,_cx,_aW,_aM,_aR,_ae);}fn _hv(_y:u32)->_gE{let _N=_q[_y+1u];let m0=bitcast<f32>(_o[_N]);let m1=bitcast<f32>(_o[_N+1u]);let m2=bitcast<f32>(_o[_N+2u]);let m3=bitcast<f32>(_o[_N+3u]);let _i=vec4(m0,m1,m2,m3);let _cx=vec2(bitcast<f32>(_o[_N+4u]),bitcast<f32>(_o[_N+5u]));let xy=_o[_N+6u];let _fN=_o[_N+7u];let x=f32(xy>>16u);let y=f32(xy&0xffffu);let _p=f32(_fN>>16u);let _aA=f32(_fN&0xffffu);return _gE(_i,_cx,vec2(x,y),vec2(_p,_aA));}fn _hu(_y:u32)->_ej{let _K=_q[_y+1u];let _bx=vec4(bitcast<f32>(_q[_y+2u]),bitcast<f32>(_q[_y+3u]),bitcast<f32>(_q[_y+4u]),bitcast<f32>(_q[_y+5u]));let _bw=vec4(bitcast<f32>(_q[_y+6u]),bitcast<f32>(_q[_y+7u]),bitcast<f32>(_q[_y+8u]),bitcast<f32>(_q[_y+9u]));let _bv=vec4(bitcast<f32>(_q[_y+10u]),bitcast<f32>(_q[_y+11u]),bitcast<f32>(_q[_y+12u]),bitcast<f32>(_q[_y+13u]));let _aV=vec4(bitcast<f32>(_q[_y+14u]),bitcast<f32>(_q[_y+15u]),bitcast<f32>(_q[_y+16u]),bitcast<f32>(_q[_y+17u]));let _bi=vec4(bitcast<f32>(_q[_y+18u]),bitcast<f32>(_q[_y+19u]),bitcast<f32>(_q[_y+20u]),bitcast<f32>(_q[_y+21u]));let _cN=_q[_y+22u]==1u;return _ej(_K,_bx,_bw,_bv,_aV,_bi,_cN);}fn _bE(t:f32,_O:u32)->f32{let _hs=0u;let _hr=1u;let _hq=2u;switch _O{case 0u:{return clamp(t,0.,1.);}case 1u:{return fract(t);}default:{return abs(t- 2.*round(.5*t));}}}const _W=4u;fn _fQ(_a:_aK,xy:vec2<f32>,_cG:bool)->array<f32,_W>{var _ag:array<f32,_W>;let _hp=f32(_a._B);for(var i=0u;i<_W;i+=1u){_ag[i]=_hp;}var _cq=_a._R;while _cq!=0u{let _v=_R[_cq];let y=_v._cw.y-xy.y;let y0=clamp(y,0.,1.);let y1=clamp(y+_v._as.y,0.,1.);let dy=y0-y1;if dy!=0.{let _fM=1./_v._as.y;let t0=(y0-y)*_fM;let t1=(y1-y)*_fM;let _fL=_v._cw.x-xy.x;let x0=_fL+t0*_v._as.x;let x1=_fL+t1*_v._as.x;let _ho=min(x0,x1);let _hn=max(x0,x1);for(var i=0u;i<_W;i+=1u){let _fK=f32(i);let _bQ=min(_ho-_fK,1.)- 1.e-6;let _dR=_hn-_fK;let b=min(_dR,1.);let c=max(b,0.);let d=max(_bQ,0.);let a=(b+.5*(d*d-c*c)-_bQ)/(_dR-_bQ);_ag[i]+=a*dy;}}let _aU=sign(_v._as.x)*clamp(xy.y-_v._aU+1.,0.,1.);for(var i=0u;i<_W;i+=1u){_ag[i]+=_aU;}_cq=_v._aT;}if _cG{for(var i=0u;i<_W;i+=1u){let a=_ag[i];_ag[i]=abs(a- 2.*round(.5*a));}}else{for(var i=0u;i<_W;i+=1u){_ag[i]=min(abs(_ag[i]),1.);}}return _ag;}fn _ht(seg:u32,_cP:f32,xy:vec2<f32>)->array<f32,_W>{var df:array<f32,_W>;for(var i=0u;i<_W;i+=1u){df[i]=1e9;}var _cq=seg;while _cq!=0u{let _v=_R[_cq];let _as=_v._as;let _fJ=xy+vec2(.5,.5)-_v._cw;let _J=1./dot(_as,_as);for(var i=0u;i<_W;i+=1u){let _dm=vec2(_fJ.x+f32(i),_fJ.y);let t=clamp(dot(_dm,_as)*_J,0.,1.);df[i]=min(df[i],length(_as*t-_dm));}_cq=_v._aT;}for(var i=0u;i<_W;i+=1u){df[i]=clamp(_cP+.5-df[i],0.,1.);}return df;}@compute @workgroup_size(4,16)fn main(@builtin(global_invocation_id)_G:vec3<u32>,@builtin(local_invocation_id)_f:vec3<u32>,@builtin(workgroup_id)_aj:vec3<u32>,){let _ar=_aj.y*_m._aC+_aj.x;let xy=vec2(f32(_G.x*_W),f32(_G.y));var rgba:array<vec4<f32>,_W>;for(var i=0u;i<_W;i+=1u){rgba[i]=unpack4x8unorm(_m._it).wzyx;}var _fE:array<array<u32,_W>,_er>;var _ba=0u;var _ag:array<f32,_W>;var _y=_ar*_ei;let _ga=_q[_y];_y+=1u;while true{let _e=_q[_y];if _e==_dz{break;}switch _e{case 1u:{let _bb=_hA(_y);let _R=_bb._a>>1u;let _cG=(_bb._a&1u)!=0u;let _a=_aK(_bb._B,_R);_ag=_fQ(_a,xy,_cG);_y+=3u;}case 2u:{let _an=_hz(_y);_ag=_ht(_an._a,_an._cP,xy);_y+=3u;}case 3u:{for(var i=0u;i<_W;i+=1u){_ag[i]=1.;}_y+=1u;}case 5u:{let _l=_hy(_y);let fg=unpack4x8unorm(_l._cO).wzyx;for(var i=0u;i<_W;i+=1u){let _bq=fg*_ag[i];rgba[i]=rgba[i]*(1.-_bq.a)+_bq;}_y+=2u;}case 6u:{let _h=_hx(_y);let d=_h._cd*xy.x+_h._fg*xy.y+_h._dy;for(var i=0u;i<_W;i+=1u){let _hm=d+_h._cd*f32(i);let x=i32(round(_bE(_hm,_h._bE)*f32(_fP- 1)));let _dl=textureLoad(_eK,vec2(x,i32(_h._am)),0);let _bq=_dl*_ag[i];rgba[i]=rgba[i]*(1.-_bq.a)+_bq;}_y+=3u;}case 7u:{let _z=_hw(_y);let _aW=_z._aW;let _aM=_z._aM;let _hl=_z._aR==_gT;let _hk=_z._aR==_gU;let _hj=_z._aR==_gS;let _fI=(_z._ae&_gR)!=0u;let _fH=select(1./_aM,0.,_hk);let _hi=select(1.,-1.,_fI||(1.-_aW)<0.);let _hh=sign(1.-_aW);for(var i=0u;i<_W;i+=1u){let _dk=vec2(xy.x+f32(i),xy.y);let _fG=_z._i.xy*_dk.x+_z._i.zw*_dk.y+_z._cx;let x=_fG.x;let y=_fG.y;let xx=x*x;let yy=y*y;var t=0.;var _dO=true;if _hl{let a=_aM-yy;t=sqrt(a)+x;_dO=a>=0.;}else if _hj{t=(xx+yy)/x;_dO=t>=0.&&x!=0.;}else if _aM>1.{t=sqrt(xx+yy)-x*_fH;}else{let a=xx-yy;t=_hi*sqrt(a)-x*_fH;_dO=a>=0.&&t>=0.;}if _dO{t=_bE(_aW+_hh*t,_z._bE);t=select(t,1.-t,_fI);let x=i32(round(t*f32(_fP- 1)));let _dl=textureLoad(_eK,vec2(x,i32(_z._am)),0);let _bq=_dl*_ag[i];rgba[i]=rgba[i]*(1.-_bq.a)+_bq;}}_y+=3u;}case 8u:{let _aD=_hv(_y);let _fF=_aD._ff+_aD._eh;for(var i=0u;i<_W;i+=1u){let _dk=vec2(xy.x+f32(i),xy.y);let _dQ=_aD._i.xy*_dk.x+_aD._i.zw*_dk.y+_aD._cx+_aD._ff;if all(_dQ<_fF)&&_ag[i]!=0.{let _dP=vec4(max(floor(_dQ),_aD._ff),min(ceil(_dQ),_fF));let _eM=fract(_dQ);let a=_dS(textureLoad(_dN,vec2<i32>(_dP.xy),0));let b=_dS(textureLoad(_dN,vec2<i32>(_dP.xw),0));let c=_dS(textureLoad(_dN,vec2<i32>(_dP.zy),0));let d=_dS(textureLoad(_dN,vec2<i32>(_dP.zw),0));let _dl=mix(mix(a,b,_eM.y),mix(c,d,_eM.y),_eM.x);let _bq=_dl*_ag[i];rgba[i]=rgba[i]*(1.-_bq.a)+_bq;}}_y+=2u;}case 9u:{if _ba<_er{for(var i=0u;i<_W;i+=1u){_fE[_ba][i]=pack4x8unorm(rgba[i]);rgba[i]=vec4(0.);}}else{}_ba+=1u;_y+=1u;}case 10u:{let _I=_hu(_y);_ba-=1u;for(var i=0u;i<_W;i+=1u){var _fD:u32;if _ba<_er{_fD=_fE[_ba][i];}else{}let bg=unpack4x8unorm(_fD);var _aY=rgba[i];var _bf:vec4<f32>;if _I._cN{let _bP=1./max(_aY.a,1e-6);_aY=vec4(_aY.rgb*_bP,_aY.a);_bf=_aY.r*_I._bx+_aY.g*_I._bw+_aY.b*_I._bv+_aY.a*_I._aV+1.*_I._bi;_bf=clamp(_bf,vec4(0.),vec4(1.));_bf=vec4(_bf.rgb*_bf.a,_bf.a);}else{_bf=_aY.r*_I._bx+_aY.g*_I._bw+_aY.b*_I._bv+_aY.a*_I._aV+_aY.a*_I._bi;_bf=clamp(_bf,vec4(0.),vec4(min(1.,_bf.a)));}let fg=_bf*_ag[i];rgba[i]=_ja(bg,fg,_I._K);}_y+=23u;}case 11u:{_y=_q[_y+1u];}default:{}}}let _eL=vec2<u32>(xy);for(var i=0u;i<_W;i+=1u){let _cr=_eL+vec2(i,0u);if _cr.x<_m._gQ&&_cr.y<_m._gP{textureStore(_bg,vec2<i32>(_cr),rgba[i]);}}}fn _dS(rgba:vec4<f32>)->vec4<f32>{return vec4(rgba.rgb*rgba.a,rgba.a);}`
