/* eslint-disable */

/**
 * Compiles what we need in swash to WASM, to be used as ES6 modules
 *
 * To run, first:
 *
 * 1. Install rust
 * 2. Ensure we have wasm32 target with `rustup target add wasm32-unknown-unknown`
 * 3. Install wasm-pack (see https://rustwasm.github.io/wasm-pack/installer/)
 *
 * Then run this file with `node generate.js` in the same directory as this file.
 *
 * @author Jonathan Olson <jonathan.olson@colorado.edu>
 */

// TODO: file to convert font
// TODO: file to subset font

const fs = require( 'fs' );
const execute = require( '../../../../perennial-alias/js/common/execute' );

( async () => {

  await execute( 'wasm-pack', [ 'build', '--target', 'web' ], './' );

  const wasmString = Buffer.from( fs.readFileSync( 'pkg/swash_shaping_bg.wasm' ) ).toString( 'base64' );

  fs.writeFileSync( 'swash_wasm.js', `// Copyright 2023, University of Colorado Boulder

/**
 * IMPORTANT: AUTOGENERATED from generate.js. DO NOT MODIFY DIRECTLY
 *
 * Embeds Swash, which has the following license:
 */

/*
Copyright (c) 2020 Chad Brokaw

Permission is hereby granted, free of charge, to any
person obtaining a copy of this software and associated
documentation files (the "Software"), to deal in the
Software without restriction, including without
limitation the rights to use, copy, modify, merge,
publish, distribute, sublicense, and/or sell copies of
the Software, and to permit persons to whom the Software
is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice
shall be included in all copies or substantial portions
of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF
ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED
TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT
SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR
IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.
 */
export default '${wasmString}';\n` );

  const bindingString = Buffer.from( fs.readFileSync( 'pkg/swash_shaping.js' ) ).toString( 'utf8' );

  fs.writeFileSync( 'swash.js', `// Copyright 2023, University of Colorado Boulder

/**
 * IMPORTANT: AUTOGENERATED from generate.js. DO NOT MODIFY DIRECTLY
 *
 * wasm_bindgen generated bindings for Swash
 */

// Disable linting for the entire file
/* eslint-disable */
${bindingString.replace( `async function __wbg_init(input) {
    if (wasm !== undefined) return wasm;

    if (typeof input === 'undefined') {
        input = new URL('swash_shaping_bg.wasm', import.meta.url);
    }
    const imports = __wbg_get_imports();

    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {
        input = fetch(input);
    }

    __wbg_init_memory(imports);

    const { instance, module } = await __wbg_load(await input, imports);

    return __wbg_finalize_init(instance, module);
}`, `async function __wbg_init(input) {
    if (wasm !== undefined) return wasm;

    const imports = __wbg_get_imports();

    __wbg_init_memory(imports);

    const { instance, module } = await __wbg_load(input, imports);

    return __wbg_finalize_init(instance, module);
}` )}` );
} )();
